buildscript {

  repositories {
    mavenCentral()
    maven { url 'https://software.r3.com/artifactory/corda-dependencies' }
    maven { url 'https://software.r3.com/artifactory/corda-releases' }
    maven { url 'https://software.r3.com/artifactory/corda' }
    maven { url 'https://software.r3.com/artifactory/gradle-libs-releases-remote-cache' }
    maven { url 'https://repo.gradle.org/gradle/libs-releases-local' }
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
  }
}

configurations.all {
  resolutionStrategy {
    force 'io.netty:netty-all:4.1.25.Final'
  }
}

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
  maven { url 'https://software.r3.com/artifactory/corda-dependencies' }
  maven { url 'https://software.r3.com/artifactory/corda-releases' }
  maven { url 'https://software.r3.com/artifactory/corda' }
  maven { url 'https://software.r3.com/artifactory/gradle-libs-releases-remote-cache' }
  maven { url 'https://repo.gradle.org/gradle/libs-releases-local' }
}

apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
  testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
  testCompile "junit:junit:$junit_version"

  cordaCompile "$corda_release_group:corda-core:$corda_release_version"
  cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
  cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
  cordaRuntime "$corda_release_group:corda:$corda_release_version"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
  kotlinOptions {
    languageVersion = "1.2"
    apiVersion = "1.2"
    jvmTarget = "1.8"
    javaParameters = true // Useful for reflection.
  }
}

cordapp.signing.enabled false

jar {
  manifest {
    attributes(
            'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
            'Main-Class': 'net.corda.r3.tmp.exporter.Exporter'
    )
  }
  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
}